<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='mac' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='w205_book' path='/workbooks' revision='1.7' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='clean_table (default.clean_table) (default)' inline='true' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ec2-52-91-112-32.compute-1.amazonaws.com' name='hadoophive.1i9psso09i0amw13si7530vbwo95'>
            <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-52-91-112-32.compute-1.amazonaws.com' sslcert='' sslmode='' username='root' workgroup-auth-mode='as-is'>
              <connection-customization class='hadoophive' enabled='false' version='10.1'>
                <vendor name='hadoophive' />
                <driver name='hadoophive' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='yes' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='yes' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='hadoophive.1i9psso09i0amw13si7530vbwo95' name='clean_table' table='[default].[clean_table]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>event_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_desc]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>event_desc</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yes_rsvp_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yes_rsvp_count]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>yes_rsvp_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_short</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_short]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>cat_short</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cat_id]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>cat_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>topic_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[topic_name]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>topic_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_name]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>event_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start_time]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>start_time</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue_state]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>venue_state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue_city]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>venue_city</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue_zip</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue_zip]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>venue_zip</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fee_amt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fee_amt]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>fee_amt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>req_fee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[req_fee]</local-name>
            <parent-name>[clean_table]</parent-name>
            <remote-alias>req_fee</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='UPPER([venue_state])' />
      </column>
      <column caption='date_convert' datatype='datetime' name='[Calculation_243194398291894273]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;second&apos;, INT([start_time]/1000)-(5*60*60), #1970-01-01#)' />
      </column>
      <column caption='Date_time_TZ' datatype='datetime' name='[Calculation_243194398323060739]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if  CONTAINS([Calculation_243194398280880128], &quot;TN&quot;)  then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WI&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MN&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MO&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AR&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;LA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ND&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;SD&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NE&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;KS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OK&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;TX&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WY&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CO&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NM&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ID&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;UT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OR&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NV&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AK&quot;) then DATEADD(&apos;hour&apos;,-5,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;HI&quot;) then DATEADD(&apos;hour&apos;,-6,[Calculation_243194398291894273])&#10;else DATEADD(&apos;hour&apos;, 0,[Calculation_243194398291894273]) end' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Id' datatype='integer' name='[cat_id]' role='dimension' type='ordinal' />
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
      <column caption='Event Desc' datatype='string' name='[event_desc]' role='dimension' type='nominal' />
      <column caption='Event Name' datatype='string' name='[event_name]' role='dimension' type='nominal' />
      <column caption='Fee Amt' datatype='real' name='[fee_amt]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Req Fee' datatype='string' name='[req_fee]' role='dimension' type='nominal' />
      <column caption='Start Time' datatype='integer' name='[start_time]' role='measure' type='quantitative' />
      <column caption='Topic Name' datatype='string' name='[topic_name]' role='dimension' type='nominal' />
      <column caption='Venue City' datatype='string' name='[venue_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Venue Zip' datatype='string' name='[venue_zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_243194398291894273]' derivation='Weekday' name='[wd:Calculation_243194398291894273:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_243194398323060739]' derivation='Weekday' name='[wd:Calculation_243194398323060739:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Dan/Documents/My Tableau Repository/Datasources/clean_table (default.clean_table) (default).tde' schema='Extract' tablename='Extract' update-time='12/04/2016 09:37:13 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_243194398280880128]' formula='UPPER([venue_state])' />
            <calculation column='[Calculation_243194398291894273]' formula='DATEADD(&apos;second&apos;, INT([start_time]/1000)-(5*60*60), #1970-01-01#)' />
            <calculation column='[Calculation_243194398323060739]' formula='if  CONTAINS([Calculation_243194398280880128], &quot;TN&quot;)  then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WI&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MN&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MO&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AR&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;LA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ND&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;SD&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NE&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;KS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OK&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;TX&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WY&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CO&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NM&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ID&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;UT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OR&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NV&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AK&quot;) then DATEADD(&apos;hour&apos;,-5,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;HI&quot;) then DATEADD(&apos;hour&apos;,-6,[Calculation_243194398291894273])&#10;else DATEADD(&apos;hour&apos;, 0,[Calculation_243194398291894273]) end' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2916' timestamp-start='2016-12-04 21:37:13.814' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_243194398291894273</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_243194398291894273]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_243194398291894273</remote-alias>
              <ordinal>0</ordinal>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>689</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2016-12-04 06:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2017-12-13 19:30:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2016-12-14 18:30:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_243194398323060739</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_243194398323060739]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_243194398323060739</remote-alias>
              <ordinal>1</ordinal>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>750</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2016-12-04 03:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2017-12-13 18:30:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2212.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2212.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cat_id</remote-name>
              <remote-type>16</remote-type>
              <local-name>[cat_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cat_id</remote-alias>
              <ordinal>3</ordinal>
              <family>clean_table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>42808.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19.352622061482823</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>36</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.09000541786474</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.087498352066261</statistic>
                <statistic aggregation='Var' datatype='real'>122.98822016826929</statistic>
                <statistic aggregation='VarP' datatype='real'>122.93261970707206</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1100374.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cat_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cat_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cat_name</remote-alias>
              <ordinal>4</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;LGBT&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;writing&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cat_short</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cat_short]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cat_short</remote-alias>
              <ordinal>5</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;arts-culture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;writing&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_desc</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_desc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_desc</remote-alias>
              <ordinal>6</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1898</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&lt;p&gt;!!! ALL SKILL LEVELS ARE WELCOME!!!!&lt;/p&gt; &lt;p&gt;No need to RSVP &apos;NO&apos; unless you are changing your &apos;YES&apos; rsvp to &apos;NO&apos;.&lt;/p&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;&lt;p&gt;~HOLIDAY PUNCH PROVIDED~&lt;/p&gt; &lt;p&gt;Please bring the following:&lt;/p&gt; &lt;p&gt;Wrapped WHITE ELEPHANT GIFT (max value $20.00)&lt;br/&gt;Whit&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2129</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_id</remote-alias>
              <ordinal>7</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2110</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;118133492&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zzqbgmyvqbjb&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_name</remote-alias>
              <ordinal>8</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1920</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot; Hat Trick \&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;~SUNDAY BIKE &amp; BBQ ~ LAIR-O-THE-BEAR &amp; SWITCHBACK BBQ&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fee_amt</remote-name>
              <remote-type>4</remote-type>
              <local-name>[fee_amt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fee_amt</remote-alias>
              <ordinal>9</ordinal>
              <family>clean_table</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>8009.7099990844727</statistic>
                <statistic aggregation='Avg' datatype='real'>29.775873602544507</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>570.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>63.452636077397301</statistic>
                <statistic aggregation='StdevP' datatype='real'>63.334584559190318</statistic>
                <statistic aggregation='Var' datatype='real'>4026.2370251706211</statistic>
                <statistic aggregation='VarP' datatype='real'>4011.2696012852284</statistic>
                <statistic aggregation='Count' datatype='integer'>269</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1317527.6352715027</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>group_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[group_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>group_name</remote-alias>
              <ordinal>10</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1827</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;! \&quot;40 and Over Events In NYC\&quot; !&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;~ Houston Socials ~&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>req_fee</remote-name>
              <remote-type>129</remote-type>
              <local-name>[req_fee]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>req_fee</remote-alias>
              <ordinal>11</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>269</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_time</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_time</remote-alias>
              <ordinal>12</ordinal>
              <family>clean_table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>689</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3281821644000000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1483644504520.7957</statistic>
                <statistic aggregation='Min' datatype='integer'>1480849200000</statistic>
                <statistic aggregation='Max' datatype='integer'>1513211400000</statistic>
                <statistic aggregation='Stdev' datatype='real'>5146490711.6103868</statistic>
                <statistic aggregation='StdevP' datatype='real'>5145327268.45963</statistic>
                <statistic aggregation='Var' datatype='real'>2.6486366644691984e+19</statistic>
                <statistic aggregation='VarP' datatype='real'>2.6474392699554238e+19</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
                <statistic aggregation='Median' datatype='integer'>1481758200000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.8691152082946543e+27</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timezone_offset</remote-name>
              <remote-type>3</remote-type>
              <local-name>[timezone_offset]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timezone_offset</remote-alias>
              <ordinal>13</ordinal>
              <family>clean_table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-50799600000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-22965461.121157322</statistic>
                <statistic aggregation='Min' datatype='integer'>-28800000</statistic>
                <statistic aggregation='Max' datatype='integer'>-14400000</statistic>
                <statistic aggregation='Stdev' datatype='real'>4802505.811218</statistic>
                <statistic aggregation='StdevP' datatype='real'>4801420.1311292499</statistic>
                <statistic aggregation='Var' datatype='real'>23064062066782.656</statistic>
                <statistic aggregation='VarP' datatype='real'>23053635275613.227</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.21763088e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>topic_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[topic_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>topic_name</remote-alias>
              <ordinal>14</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1814</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[\&quot;.NET\&quot;,\&quot;C\#\&quot;,\&quot;Software Development\&quot;,\&quot;Computer programming\&quot;]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;[\&quot;financial services\&quot;,\&quot;Banking\&quot;,\&quot;Startup Businesses\&quot;,\&quot;Finance\&quot;,\&quot;Mobile Payment\&quot;,\&quot;Financial Technology\&quot;,\&quot;Finance Professionals&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue_city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue_city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>venue_city</remote-alias>
              <ordinal>15</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>510</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Irvington&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;san diego&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1701</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue_state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue_state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>venue_state</remote-alias>
              <ordinal>16</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AZ&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1542</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue_zip</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue_zip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>venue_zip</remote-alias>
              <ordinal>17</ordinal>
              <family>clean_table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>446</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;06118&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;95834&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>738</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yes_rsvp_count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[yes_rsvp_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>yes_rsvp_count</remote-alias>
              <ordinal>18</ordinal>
              <family>clean_table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24759.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.193037974683545</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>438</statistic>
                <statistic aggregation='Stdev' datatype='real'>20.259405159458925</statistic>
                <statistic aggregation='StdevP' datatype='real'>20.254825210229054</statistic>
                <statistic aggregation='Var' datatype='real'>410.44349741511087</statistic>
                <statistic aggregation='VarP' datatype='real'>410.25794429693042</statistic>
                <statistic aggregation='Count' datatype='integer'>2212</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1184619.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_243194398280880128</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_243194398280880128]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_243194398280880128</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1542</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.643952' measure-ordering='alphabetic' measure-percentage='0.356048' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[wd:Calculation_243194398291894273:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>7</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1</bucket>
            </map>
            <map to='#edc948'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:Calculation_243194398323060739:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>7</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1</bucket>
            </map>
            <map to='#edc948'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>6</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='event_desc' />
        <field-sort-custom-order field='yes_rsvp_count' />
        <field-sort-custom-order field='cat_name' />
        <field-sort-custom-order field='cat_short' />
        <field-sort-custom-order field='cat_id' />
        <field-sort-custom-order field='group_name' />
        <field-sort-custom-order field='topic_name' />
        <field-sort-custom-order field='event_name' />
        <field-sort-custom-order field='start_time' />
        <field-sort-custom-order field='venue_state' />
        <field-sort-custom-order field='Calculation_243194398280880128' />
        <field-sort-custom-order field='venue_city' />
        <field-sort-custom-order field='venue_zip' />
        <field-sort-custom-order field='fee_amt' />
        <field-sort-custom-order field='req_fee' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
      <datasources>
        <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
      </datasources>
      <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
        <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
        <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]'>
        <groupfilter function='level-members' level='[none:cat_short:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Avg RSVP by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column-instance column='[yes_rsvp_count]' derivation='Avg' name='[avg:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398280880128]' derivation='None' name='[none:Calculation_243194398280880128:nk]' pivot='key' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_state]' derivation='None' name='[none:venue_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_zip]' derivation='None' name='[none:venue_zip:nk]' pivot='key' type='nominal' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Venue Zip' datatype='string' name='[venue_zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_243194398280880128:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]'>
            <groupfilter function='level-members' level='[none:venue_zip:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]' />
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' />
              <geometry column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Blank Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]' field-type='quantitative' max='-6976506.4828631748' min='-13971644.927117292' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]' field-type='quantitative' max='6766190.4918066412' min='2787748.745569136' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Category by Avg RSVPs'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column-instance column='[yes_rsvp_count]' derivation='Avg' name='[avg:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_city]' derivation='None' name='[none:venue_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_state]' derivation='None' name='[none:venue_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_zip]' derivation='None' name='[none:venue_zip:nk]' pivot='key' type='nominal' />
            <column caption='Venue City' datatype='string' name='[venue_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Venue Zip' datatype='string' name='[venue_zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' direction='DESC' using='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' />
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_city:nk]'>
            <groupfilter function='level-members' level='[none:venue_city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]'>
            <groupfilter function='level-members' level='[none:venue_state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]'>
            <groupfilter function='member' level='[none:venue_zip:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_city:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Heat Map States'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_state]' derivation='None' name='[none:venue_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]' field-type='quantitative' max='-5858340.047199972' min='-15751845.78908973' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]' field-type='quantitative' max='8089671.2570701391' min='1406204.8157935264' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]' />
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
              <geometry column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Map Zip Codes'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398280880128]' derivation='None' name='[none:Calculation_243194398280880128:nk]' pivot='key' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_zip]' derivation='None' name='[none:venue_zip:nk]' pivot='key' type='nominal' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Venue Zip' datatype='string' name='[venue_zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_243194398280880128:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]' field-type='quantitative' max='-7554283.8194213966' min='-14127361.487118145' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]' field-type='quantitative' max='6751967.5103075802' min='2835797.0261850962' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='true' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]' />
              <size column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Popular Days'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='date_convert' datatype='datetime' name='[Calculation_243194398291894273]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;second&apos;, INT([start_time]/1000)-(5*60*60), #1970-01-01#)' />
            </column>
            <column caption='Date_time_TZ' datatype='datetime' name='[Calculation_243194398323060739]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if  CONTAINS([Calculation_243194398280880128], &quot;TN&quot;)  then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WI&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MN&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MO&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AR&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;LA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ND&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;SD&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NE&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;KS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OK&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;TX&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WY&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CO&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NM&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ID&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;UT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OR&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NV&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AK&quot;) then DATEADD(&apos;hour&apos;,-5,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;HI&quot;) then DATEADD(&apos;hour&apos;,-6,[Calculation_243194398291894273])&#10;else DATEADD(&apos;hour&apos;, 0,[Calculation_243194398291894273]) end' />
            </column>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_state]' derivation='None' name='[none:venue_state:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='integer' name='[start_time]' role='measure' type='quantitative' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_243194398323060739]' derivation='Weekday' name='[wd:Calculation_243194398323060739:ok]' pivot='key' type='ordinal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]'>
            <groupfilter function='level-members' level='[none:venue_state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[wd:Calculation_243194398323060739:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Popular Times- Avg'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most Popular Meetup Times</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='date_convert' datatype='datetime' name='[Calculation_243194398291894273]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;second&apos;, INT([start_time]/1000)-(5*60*60), #1970-01-01#)' />
            </column>
            <column caption='Date_time_TZ' datatype='datetime' name='[Calculation_243194398323060739]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if  CONTAINS([Calculation_243194398280880128], &quot;TN&quot;)  then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WI&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MN&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MO&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AR&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;LA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ND&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;SD&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NE&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;KS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OK&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;TX&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WY&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CO&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NM&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ID&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;UT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OR&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NV&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AK&quot;) then DATEADD(&apos;hour&apos;,-5,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;HI&quot;) then DATEADD(&apos;hour&apos;,-6,[Calculation_243194398291894273])&#10;else DATEADD(&apos;hour&apos;, 0,[Calculation_243194398291894273]) end' />
            </column>
            <column-instance column='[yes_rsvp_count]' derivation='Avg' name='[avg:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398323060739]' derivation='Hour' name='[hr:Calculation_243194398323060739:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='integer' name='[start_time]' role='measure' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2ecdc</color>
                <color>#f3e7c7</color>
                <color>#f5e2b2</color>
                <color>#f6dd9c</color>
                <color>#f8d787</color>
                <color>#f9d271</color>
                <color>#facd5b</color>
                <color>#fcc744</color>
                <color>#fdc22d</color>
                <color>#ffbd17</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[hr:Calculation_243194398323060739:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Popular Times-Sum'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='date_convert' datatype='datetime' name='[Calculation_243194398291894273]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;second&apos;, INT([start_time]/1000)-(5*60*60), #1970-01-01#)' />
            </column>
            <column caption='Date_time_TZ' datatype='datetime' name='[Calculation_243194398323060739]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if  CONTAINS([Calculation_243194398280880128], &quot;TN&quot;)  then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WI&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IL&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MN&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;IA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MO&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AR&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;LA&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ND&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;SD&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NE&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;KS&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OK&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;TX&quot;) then DATEADD(&apos;hour&apos;,-1,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;MT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WY&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CO&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NM&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;ID&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;UT&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-2,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;WA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;OR&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;NV&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;CA&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AZ&quot;) then DATEADD(&apos;hour&apos;,-3,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;AK&quot;) then DATEADD(&apos;hour&apos;,-5,[Calculation_243194398291894273])&#10;elseif  CONTAINS([Calculation_243194398280880128], &quot;HI&quot;) then DATEADD(&apos;hour&apos;,-6,[Calculation_243194398291894273])&#10;else DATEADD(&apos;hour&apos;, 0,[Calculation_243194398291894273]) end' />
            </column>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398291894273]' derivation='Hour' name='[hr:Calculation_243194398291894273:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_243194398323060739]' derivation='Hour' name='[hr:Calculation_243194398323060739:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='integer' name='[start_time]' role='measure' type='quantitative' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_243194398291894273]' derivation='Weekday' name='[wd:Calculation_243194398291894273:ok]' pivot='key' type='ordinal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[wd:Calculation_243194398291894273:ok]'>
            <groupfilter function='level-members' level='[wd:Calculation_243194398291894273:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[wd:Calculation_243194398291894273:ok]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[hr:Calculation_243194398291894273:ok]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[hr:Calculation_243194398323060739:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Popular Categories by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398280880128]' derivation='None' name='[none:Calculation_243194398280880128:nk]' pivot='key' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_zip]' derivation='None' name='[none:venue_zip:nk]' pivot='key' type='nominal' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Venue Zip' datatype='string' name='[venue_zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_243194398280880128:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' direction='DESC' using='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90232&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90272&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90274&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90278&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90290&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90293&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90402&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90403&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90621&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90631&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90650&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90706&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90732&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90740&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90755&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90803&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90807&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;90815&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;91016&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;91101&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;91105&quot;' />
              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;91106&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average RSVPs by Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column-instance column='[yes_rsvp_count]' derivation='Avg' name='[avg:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_name:nk]' direction='DESC' using='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' />
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#003a70' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='State_Cat Highlight'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398280880128]' derivation='None' name='[none:Calculation_243194398280880128:nk]' pivot='key' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_state]' derivation='None' name='[none:venue_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]' direction='DESC' using='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
          <sort class='computed' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' direction='DESC' using='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]'>
            <groupfilter function='member' level='[none:venue_state:nk]' member='&quot;CA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:venue_state:nk]' />
              <groupfilter function='member' level='[none:venue_state:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
              <text column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top States by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top States for Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
            <column caption='State Upper' datatype='string' name='[Calculation_243194398280880128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([venue_state])' />
            </column>
            <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_243194398280880128]' derivation='None' name='[none:Calculation_243194398280880128:nk]' pivot='key' type='nominal' />
            <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue_state]' derivation='None' name='[none:venue_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[yes_rsvp_count]' derivation='Sum' name='[sum:yes_rsvp_count:qk]' pivot='key' type='quantitative' />
            <column caption='Venue State' datatype='string' name='[venue_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Yes Rsvp Count' datatype='integer' name='[yes_rsvp_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]'>
            <groupfilter from='&quot;AZ&quot;' function='range' level='[none:Calculation_243194398280880128:nk]' to='&quot;WI&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]' direction='DESC' using='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AZ&quot;' function='range' level='[none:venue_state:nk]' to='&quot;Ca&quot;' />
              <groupfilter function='member' level='[none:venue_state:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:venue_state:nk]' member='&quot;IL&quot;' />
              <groupfilter from='&quot;NJ&quot;' function='range' level='[none:venue_state:nk]' to='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]</column>
            <column>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2ecdc</color>
                <color>#f3e7c7</color>
                <color>#f5e2b2</color>
                <color>#f6dd9c</color>
                <color>#f8d787</color>
                <color>#f9d271</color>
                <color>#facd5b</color>
                <color>#fcc744</color>
                <color>#fdc22d</color>
                <color>#ffbd17</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' value='Choose your category'>
              <formatted-text>
                <run>Choose your category</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]</rows>
        <cols>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Marketing Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='clean_table (default.clean_table) (default)' name='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w' />
      </datasources>
      <datasource-dependencies datasource='federated.0t4thqh1qegjkl1fo4ssf1p9ho0w'>
        <column caption='Cat Short' datatype='string' name='[cat_short]' role='dimension' type='nominal' />
        <column-instance column='[cat_short]' derivation='None' name='[none:cat_short:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='752' h='94000' id='4' is-fixed='true' type='layout-basic' w='100000' x='0' y='0' />
          </zone>
        </zone>
        <zone forceUpdate='true' h='7625' id='1' type='text' w='86700' x='700' y='1000'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#d72c28' fontname='Tableau Light' fontsize='36'>Find Your Niche</run>
          </formatted-text>
        </zone>
        <zone h='15125' id='2' is-centered='0' is-scaled='1' param='/Users/Dan/Downloads/Meetup.png' type='bitmap' w='31700' x='66600' y='1250' />
        <zone h='34625' id='7' name='Top States by Category' w='44000' x='1000' y='18625' />
        <zone h='7250' id='8' mode='dropdown' name='Top States by Category' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' w='30300' x='1200' y='9875' />
        <zone h='37375' id='9' name='Map Zip Codes' w='47600' x='49800' y='17875' />
        <zone h='38500' id='12' name='Most Popular Days' w='48700' x='1000' y='58125' />
        <zone h='36625' id='13' name='Most Popular Times- Avg' w='47100' x='50100' y='58250' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Finding a New Location</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5860' id='6' type='title' w='100000' x='0' y='0' />
            <zone h='93619' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='5860'>
              <zone h='14193' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5860' />
              <zone h='79426' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='20053'>
                <flipboard active-id='7' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='The United States is BIG...' captured-sheet='Blank Map' id='6'>
                      <capturedDeltas>
                        <worksheet name='Blank Map'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]' field-type='quantitative' max='6611576.01177435' min='3225546.7933987197' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]' field-type='quantitative' max='-6100093.0591187198' min='-13825499.528228173' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Let&apos;s see what people are doing!' captured-sheet='State_Cat Highlight' id='1' />
                    <story-point caption='Where are there the most active people!?' captured-sheet='Heat Map States' id='3'>
                      <capturedDeltas>
                        <worksheet name='Heat Map States'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Latitude (generated)]' field-type='quantitative' max='7986277.7737548705' min='1180775.3514095121' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[Longitude (generated)]' field-type='quantitative' max='-4205452.8533587884' min='-17882370.554440264' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='California is huge, which cities are most active?' captured-sheet='Map Zip Codes' id='4' />
                    <story-point caption='Now that we know where to find them, what are these people doing?!' captured-sheet='Popular Categories by State' id='5'>
                      <capturedDeltas>
                        <worksheet name='Popular Categories by State'>
                          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]'>
                            <groupfilter function='member' level='[none:Calculation_243194398280880128:nk]' member='&quot;CA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                          <filter class='categorical' column='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]'>
                            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;93036&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;93101&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94025&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94040&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94041&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94065&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94087&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94102&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94103&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94105&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94110&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94123&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94133&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94301&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94404&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94501&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94520&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94530&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94539&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94553&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94559&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94561&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94596&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94598&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94601&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94607&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94608&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94609&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94611&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94612&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94621&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94702&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94703&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94707&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94710&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;94952&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;95008&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;95023&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;95035&quot;' />
                              <groupfilter function='member' level='[none:venue_zip:nk]' member='&quot;95054&quot;' />
                            </groupfilter>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='I&apos;m into sports, where should I go for that?' captured-sheet='Top States by Category' id='7' />
                    <story-point caption='I&apos;ll just create my own group, what day should we meet?' captured-sheet='Most Popular Days' id='8' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone flipboard-zone-id='5' h='10156' hidden='true' id='9' story-point-id='6' type='text' w='33309' x='4832' y='18099'>
          <formatted-text>
            <run fontalignment='0'>There&apos;s an unlimited number of activities to do, where should we start?</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Popular Categories by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='State_Cat Highlight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Heat Map States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Map Zip Codes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]</field>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</field>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Popular Days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]</field>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]</field>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[wd:Calculation_243194398291894273:ok]</field>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[wd:Calculation_243194398323060739:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Popular Times-Sum'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' />
            <card param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[wd:Calculation_243194398291894273:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Most Popular Times- Avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Category by Avg RSVPs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_state:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_city:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Avg RSVP by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:Calculation_243194398280880128:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:venue_zip:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[avg:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Blank Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Top States by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[none:cat_short:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Marketing Dashboard'>
      <viewpoints>
        <viewpoint name='Map Zip Codes'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Most Popular Days'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Popular Times- Avg'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top States by Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t4thqh1qegjkl1fo4ssf1p9ho0w].[sum:yes_rsvp_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg RSVP by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Blank Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Category by Avg RSVPs' width='192'>
      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
      tc0ygMW55t8B5hNBWrGodzAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Heat Map States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Zip Codes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Marketing Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Popular Days' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Popular Times- Avg' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Most Popular Times-Sum' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Popular Categories by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State_Cat Highlight' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      oMNgFJLJ5i7rXIaVYu6aOWJiet0eGAbTM1MEiY2uwXDsMVWvYaVMcoUc4SAil5lg/dw5dkxP
      4EcaJAmJplMslahYKbTEQzd0EnzcbB4Lg4zrUMzn0XTIZ5yLzlWbqNIaesRhwOT0DjQtYaiF
      +JpBoT6JpkHK0NCDBDedp+CHWJZFoVQlmy+AtkGYRDhuERuDXTtn8bp9ivkcvqVRBuLQI4i7
      ZDJ1er0BuUoFLpKn7AEuwQ+yB9hYX8N0spTyb30Ab/UeIAo8Akwcy3j5YBIxGAVk3Isv9vPe
      Dp8Eb/t3gB8WtfrU1R5hywzLxnjtQc0g437f0TcliTxGgUESe2TczPeOry4tkC7UKeUzF3j2
      W0sCEFfEuN/mkceOcu3cFLYR0w6zlG2ftTCh1RnQ6Q25ee+uK34lSwIQV0R/MGJycgLbdnBd
      B78f4mRKdDfOMjczQXfkYzlZ8lfwtz/IHuCSyN2gl+btsAfY9p8DCHE5SQBCadt2D2Db9rY7
      1TBNE9M0t+Vcuq5vu1Mgy7LQNG1bznXett0DCHElyCmQUJoEIJQmAQilSQBCaRKAUJoEIJQm
      AQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKA
      UJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBC
      aRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQm
      AQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKA
      UJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBC
      aRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQm
      AQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUNr/AwYrFNxkkv48AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top States by Category' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
